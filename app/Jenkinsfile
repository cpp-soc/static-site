pipeline {
    agent any

    environment {
        // Host paths
        PROD_DIR     = "/opt/docker/site"             // directory with compose.yml
        SITE_DIR     = "/opt/docker/site/static-site" // directory with Dockerfile + built app code

        IMAGE_TAG    = "static-site:latest"           // must match compose.yml's image:
        SERVICE_NAME = "static-site"                  // service name in compose.yml
    }

    triggers {
        // Optional safety net if webhooks fail.
        pollSCM('H/5 * * * *')
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Sync code into SITE_DIR') {
            steps {
                // If your app code lives in ./app in the repo, change "./" to "./app/"
                sh """
                rsync -a --delete ./ ${SITE_DIR}/
                """
            }
        }

        stage('Build static-site:latest on host Docker') {
            steps {
                sh """
                cd ${SITE_DIR}
                docker build -t ${IMAGE_TAG} -f Dockerfile .
                """
            }
        }

        stage('Recreate container with docker compose from /opt/docker/site') {
            steps {
                sh """
                cd ${PROD_DIR}
                docker compose up -d ${SERVICE_NAME}
                """
            }
        }
    }

    post {
        success {
            echo "✅ Deploy succeeded. ${IMAGE_TAG} is now running."
        }
        failure {
            echo "❌ Deploy failed. Check logs."
        }
    }
}
